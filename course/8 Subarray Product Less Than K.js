/*
Given an array of integers nums and an integer k, return the number of contiguous subarrays where the product of all 
the elements in the subarray is strictly less than k. 

Example 1:

Input: nums = [10,5,2,6], k = 100
Output: 8
Explanation: The 8 subarrays that have product less than 100 are:
[10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6]
Note that [10, 5, 2] is not included as the product of 100 is not strictly less than k.

Example 2:

Input: nums = [1,2,3], k = 0
Output: 0

Constraints:
    1 <= nums.length <= 3 * 104
    1 <= nums[i] <= 1000
    0 <= k <= 106
*/

/*
var numSubarrayProductLessThanK = function (nums, k) {
    const prodArr = [];
    let currentProd = 0;
    for (let i = 0; i < nums.length; i++) {
        if (i === 0) {
            currentProd = nums[i];
        } else {
            currentProd = currentProd * nums[i];
        }
        prodArr.push(currentProd);
    }

    let res = 0;
    let checkArrs = [];
    let left = 0;
    for (let i = 0; i < nums.length; i++) {
        if (i === 0) {
            //first item if its fit - add it to a result
            if (nums[i] < k) {
                res++;
                //for debug only
                console.log("first item in the list - add " + nums[i]);
                console.log([nums[i]]);
                checkArrs.push([nums[i]]);
                //end debug
            }
        } else {
            //next items
            if (nums[i] < k) {
                //if item itself is less than k - add it to the result
                res++;
                //for debug only
                console.log("item itself is less than k - add " + nums[i]);
                console.log([nums[i]]);
                checkArrs.push([nums[i]]);
                //end debug
            }
            //calculate prod between left and i
            let leftProd = prodArr[left - 1] !== undefined ? prodArr[left - 1] : 1;
            let prod = prodArr[i] / leftProd;
            if (prod < k && left < i) {
                //if prod is less then k - add subarray to res
                res++;
                //for debug only
                console.log("prod is less than k - add [" + nums[left] + ", " + nums[i] + "]");
                console.log([nums[left], nums[i]]);
                checkArrs.push([nums[left], nums[i]]);
                //end debug
                //then move right (i)
                if (i === nums.length - 1) {
                    console.log("it's the last item");
                    left++;
                    leftProd = prodArr[left - 1] !== undefined ? prodArr[left - 1] : 1;
                    prod = prodArr[i] / leftProd;
                    while (left < i && prod > k) {
                        //if prod is still more then k - move left again until we found a left where prod is less than k
                        left++;
                        leftProd = prodArr[left - 1] !== undefined ? prodArr[left - 1] : 1;
                        prod = prodArr[i] / leftProd;
                    }
                    //if we found a new left where prod is less than k -add it to res and move right forward
                    if (left < i && prod < k) {
                        res++;
                        //for debug only
                        console.log([nums[left], nums[i]]);
                        checkArrs.push([nums[left], nums[i]]);
                        //end debug
                        //then move right (i)
                    }
                }
            } else {
                //if prod is more then k - move left.Let's shrink our subarray
                left++;
                leftProd = prodArr[left - 1] !== undefined ? prodArr[left - 1] : 1;
                prod = prodArr[i] / leftProd;
                while (left < i && prod > k) {
                    //if prod is still more then k - move left again until we found a left where prod is less than k
                    left++;
                    leftProd = prodArr[left - 1] !== undefined ? prodArr[left - 1] : 1;
                    prod = prodArr[i] / leftProd;
                }
                //if we found a new left where prod is less than k -add it to res and move right forward
                if (prod < k && left < i) {
                    res++;
                    //for debug only
                    console.log([nums[left], nums[i]]);
                    checkArrs.push([nums[left], nums[i]]);
                    //end debug
                    //then move right (i)
                }
                //if we didn't found and left has already come on i - just move right
            }
        }
        //sumArr.push(current);
        console.log("--------------");
    }
    return res;
};

*/

/*
var numSubarrayProductLessThanK = function (nums, k) {
    const prodArr = [];
    let currentProd = BigInt(0);
    for (let i = 0; i < nums.length; i++) {
        if (i === 0) {
            currentProd = BigInt(nums[i]);
        } else {
            currentProd = BigInt(currentProd * BigInt(nums[i]));
        }
        prodArr.push(currentProd);
    }
    //console.log(prodArr);

    let res = 0;
    for (let i = 0; i < nums.length; i++) {
        let p = i;
        let leftProd = prodArr[i - 1] !== undefined ? prodArr[i - 1] : BigInt(1);
        let prod = -Infinity;
        while (prod < BigInt(k) && p < nums.length) {
            prod = prodArr[p] / BigInt(leftProd);
            console.log(prod);
            if (prod < BigInt(k)) {
                res++;
                p++;
            }
        }
    }
    return res;
};
*/

/*
var numSubarrayProductLessThanK = function (nums, k) {
    const prodArr = [];
    let currentProd = BigInt(0);
    for (let i = 0; i < nums.length; i++) {
        if (i === 0) {
            currentProd = BigInt(nums[i]);
        } else {
            currentProd = BigInt(currentProd * BigInt(nums[i]));
        }
        prodArr.push(currentProd);
    }
    //console.log(prodArr);

    let res = 0;
    for (let i = 0; i < nums.length; i++) {
        let p = nums.length - 1;
        let leftProd = prodArr[i - 1] !== undefined ? prodArr[i - 1] : BigInt(1);
        let prod = Infinity;
        while (prod >= BigInt(k) && p >= i) {
            prod = prodArr[p] / BigInt(leftProd);
            //console.log(prod);
            if (prod >= BigInt(k)) {
                p--;
            }
        }
        const diff = p - i + 1;
        res = res + diff;
    }
    return res;
};
*/

var numSubarrayProductLessThanK = function (nums, k) {
    const prodArr = [];
    let currentProd = BigInt(0);
    for (let i = 0; i < nums.length; i++) {
        if (i === 0) {
            currentProd = BigInt(nums[i]);
        } else {
            currentProd = BigInt(currentProd * BigInt(nums[i]));
        }
        prodArr.push(currentProd);
    }
    //console.log(prodArr);

    let res = 0;
    let found = null;
    for (let i = 0; i < nums.length; i++) {
        let p1 = nums.length - 1; //starts from the right
        let p2 = found; //starts from the left. If we have previously found left - start to search from it
        if (found === null || found < 1) {
            p2 = i;
        }
        //let p2 = i; //starts from the left
        //console.log(p2);
        found = null; // turn found back to null
        //let found = null;
        let iProd = prodArr[i - 1] !== undefined ? prodArr[i - 1] : BigInt(1);
        //console.log(p2);
        let prod1 = Infinity;
        let prod2 = -Infinity;
        while (found === null && p1 >= i && p2 < nums.length) {
            prod1 = prodArr[p1] / BigInt(iProd);
            prod2 = prodArr[p2] / BigInt(iProd);
            //console.log(prod1);
            if (prod1 >= BigInt(k)) {
                p1--;
            } else {
                //then this one is the first good
                found = p1;
                //break;
            }
            if (prod2 < BigInt(k)) {
                p2++;
            } else {
                //then previous was last good
                found = p2 - 1;
                //break;
            }
        }
        const diff = found - i + 1;
        res = res + diff;
    }
    return res;
};

console.log(numSubarrayProductLessThanK([10, 5, 2, 6], 100));
console.log(numSubarrayProductLessThanK([10, 9, 10, 4, 3, 8, 3, 3, 6, 2, 10, 10, 9, 3], 19));
console.log(numSubarrayProductLessThanK([1, 2, 3], 0));
console.log(numSubarrayProductLessThanK([10, 2, 2, 5, 4, 4, 4, 3, 7, 7], 289));
//10
//2
//10, 2
//2
//10, 2, 2
//5
//10, 2, 2, 5
//4
//check 10, 2, 2, 5, 4 = 800
//2, 2, 5, 4
//4
//check 2, 2, 5, 4, 4 = 320
//2, 5, 4, 4
//4
//check 2, 5, 4, 4, 4 = 640
//check 5, 4, 4, 4 = 320
//4, 4, 4
//3
//4, 4, 4, 3
//7
//check 4, 4, 4, 3, 7 = 1344
//check 4, 4, 3, 7 = 336
// 4, 3, 7
//7
//check 4, 3, 7, 7 = 672
//3, 7, 7

const nums = [
    15, 4, 13, 33, 1, 19, 26, 17, 14, 28, 6, 7, 6, 14, 7, 1, 8, 8, 31, 1, 12, 20, 22, 20, 21, 6, 7, 33, 2, 30, 3, 18, 17, 23, 16, 7, 32, 24, 21, 33,
    11, 15, 31, 33, 21, 9, 2, 2, 14, 10, 11, 2, 26, 20, 19, 12, 32, 32, 6, 21, 20, 24, 16, 19, 27, 10, 32, 18, 13, 20, 6, 17, 32, 24, 7, 32, 15, 28,
    18, 30, 15, 13, 24, 29, 33, 23, 33, 19, 20, 15, 26, 33, 9, 16, 19, 29, 20, 2, 30, 15, 12, 9, 10, 20, 4, 23, 8, 25, 13, 19, 24, 33, 6, 20, 32, 18,
    33, 20, 26, 4, 17, 13, 9, 6, 2, 32, 8, 28, 6, 4, 19, 15, 1, 14, 27, 29, 22, 28, 18, 3, 25, 29, 26, 14, 31, 18, 5, 10, 19, 5, 11, 24, 26, 3, 11, 6,
    22, 21, 21, 23, 6, 6, 3, 23, 2, 14, 9, 8, 9, 8, 28, 9, 18, 31, 22, 1, 29, 31, 11, 7, 33, 18, 24, 14, 13, 13, 15, 9, 10, 29, 14, 4, 31, 13, 18, 28,
    20, 3, 27, 8, 15, 18, 7, 10, 23, 3, 20, 9, 15, 10, 29, 16, 24, 13, 28, 27, 26, 22, 20, 25, 12, 29, 1, 27, 5, 29, 32, 26, 26, 25, 3, 19, 28, 7, 31,
    33, 20, 7, 25, 1, 21, 16, 22, 26, 19, 32, 7, 16, 21, 24, 28, 31, 12, 18, 31, 3, 18, 18, 23, 23, 26, 22, 18, 5, 9, 33, 32, 26, 33, 22, 17, 9, 3,
    17, 31, 27, 8, 10, 18, 17, 9, 29, 9, 33, 1, 5, 17, 19, 10, 31, 8, 13, 28, 20, 17, 19, 3, 4, 16, 5, 5, 5, 25, 3, 23, 27, 11, 27, 20, 3, 30, 9, 17,
    2, 2, 24, 29, 22, 1, 2, 15, 12, 28, 12, 29, 21, 6, 22, 5, 27, 16, 9, 23, 10, 27, 18, 14, 22, 6, 23, 3, 23, 5, 2, 30, 24, 11, 26, 11, 16, 5, 32, 7,
    15, 6, 25, 1, 29, 31, 4, 18, 30, 7, 9, 10, 25, 28, 3, 23, 1, 6, 33, 27, 21, 25, 1, 17, 15, 26, 10, 15, 10, 18, 14, 4, 8, 29, 3, 22, 31, 28, 16,
    21, 19, 17, 16, 27, 8, 28, 7, 31, 23, 28, 13, 9, 11, 15, 1, 23, 14, 26, 14, 20, 2, 33, 14, 27, 26, 2, 22, 27, 18, 5, 20, 9, 20, 11, 29, 15, 8, 6,
    21, 29, 24, 5, 3, 9, 29, 33, 1, 30, 21, 31, 17, 18, 8, 14, 30, 16, 18, 30, 31, 25, 33, 20, 7, 2, 21, 28, 31, 9, 17, 21, 16, 22, 17, 6, 6, 8, 5, 2,
    25, 12, 23, 33, 6, 17, 20, 12, 4, 14, 5, 23, 11, 7, 2, 28, 14, 26, 22, 18, 26, 24, 29, 3, 5, 32, 22, 10, 10, 27, 19, 24, 15, 24, 7, 18, 8, 15, 10,
    23, 26, 29, 27, 22, 13, 27, 15, 2, 33, 5, 7, 14, 1, 24, 10, 15, 19, 28, 1, 8, 7, 25, 14, 19, 24, 19, 4, 1, 17, 6, 14, 31, 14, 15, 2, 19, 19, 25,
    18, 23, 26, 12, 25, 16, 12, 30, 30, 28, 32, 13, 22, 18, 1, 21, 16, 30, 18, 21, 10, 21, 18, 28, 24, 2, 12, 28, 12, 11, 14, 16, 26, 30, 13, 11, 4,
    21, 21, 21, 31, 33, 32, 12, 18, 22, 32, 26, 19, 13, 13, 3, 28, 28, 10, 12, 17, 4, 25, 2, 15, 32, 11, 9, 32, 15, 29, 6, 25, 29, 8, 1, 5, 24, 22,
    27, 18, 19, 22, 29, 6, 5, 6, 17, 28, 10, 16, 22, 9, 18, 21, 16, 7, 10, 29, 26, 28, 6, 13, 11, 28, 24, 13, 26, 20, 21, 30, 28, 24, 25, 14, 12, 13,
    25, 33, 30, 18, 4, 28, 16, 15, 15, 28, 5, 22, 12, 1, 12, 15, 24, 18, 21, 20, 31, 10, 29, 16, 30, 16, 31, 13, 18, 17, 16, 23, 21, 3, 22, 11, 2, 12,
    4, 14, 23, 9, 31, 16, 32, 4, 13, 3, 21, 26, 23, 21, 32, 26, 1, 27, 22, 12, 25, 18, 16, 20, 33, 31, 13, 12, 28, 23, 1, 13, 32, 20, 32, 14, 16, 11,
    13, 30, 31, 7, 32, 16, 27, 12, 22, 22, 31, 1, 19, 13, 12, 22, 10, 1, 8, 3, 31, 9, 8, 32, 8, 29, 8, 17, 32, 7, 29, 31, 8, 13, 30, 6, 20, 25, 9, 13,
    23, 9, 10, 15, 19, 29, 20, 14, 1, 10, 23, 8, 2, 13, 2, 7, 2, 21, 19, 15, 6, 30, 23, 24, 13, 32, 23, 24, 6, 17, 5, 15, 13, 12, 19, 22, 9, 3, 32,
    10, 25, 25, 27, 6, 16, 7, 24, 1, 21, 13, 9, 22, 4, 10, 27, 14, 23, 30, 29, 29, 9, 30, 4, 18, 28, 31, 5, 15, 2, 9, 2, 28, 5, 29, 1, 2, 6, 22, 11,
    6, 13, 7, 16, 10, 33, 9, 8, 7, 29, 1, 2, 20, 11, 23, 11, 20, 21, 5, 22, 28, 1, 9, 17, 25, 20, 25, 18, 26, 28, 28, 30, 16, 14, 32, 22, 12, 3, 2,
    15, 20, 9, 23, 16, 2, 1, 27, 16, 28, 8, 11, 11, 18, 12, 18, 27, 32, 12, 16, 15, 29, 16, 21, 15, 9, 4, 20, 14, 30, 7, 25, 27, 5, 1, 28, 11, 23, 16,
    7, 9, 20, 15, 15, 17, 20, 1, 31, 10, 2, 18, 19, 1, 22, 1, 2, 22, 18, 16, 28, 28, 21, 12, 23, 33, 31, 28, 30, 21, 10, 9, 20, 25, 23, 20, 6, 23, 24,
    10, 5, 17, 4, 30, 9, 7, 33, 17, 9, 17, 30, 29, 16, 26, 6, 5, 28, 13, 18, 31, 9, 3, 5, 20, 27, 2, 11, 21, 32, 9, 10, 28, 29, 30, 5, 14, 11, 17, 6,
    5, 16, 5, 27, 32, 31, 25, 12, 21, 29, 26, 15, 20, 22, 7, 4, 10, 19, 32, 1, 1, 23, 31, 7, 12, 22, 2, 6, 29, 17, 26, 29, 18, 15, 10, 19, 23, 9, 20,
    11, 13, 5, 27, 11, 17, 8, 29, 32, 29, 12, 2, 4, 30, 29, 9, 25, 22, 27, 7, 17, 27, 13, 7, 1, 23, 22, 9, 17, 18, 9, 16, 14, 22, 17, 19, 3, 27, 2,
    21, 12, 8, 1, 22, 31, 28, 21, 21, 14, 1, 14, 21, 24, 8, 22, 1, 28, 2, 8, 12, 12, 8, 1, 7, 11, 21, 23, 9, 28, 11, 20, 24, 6, 27, 2, 25, 17, 32, 32,
    15, 5, 26, 15, 21, 10, 23, 20, 12, 23, 23, 11, 19, 29, 21, 9, 23, 13, 4, 6, 25, 7, 28, 2, 18, 4, 32, 16, 9, 21, 30, 20, 31, 14, 33, 5, 5, 24, 15,
    18, 16, 23, 29, 16, 8, 2, 18, 16, 11, 33, 28, 17, 24, 29, 31, 23, 1, 10, 27, 18, 21, 26, 13, 12, 28, 23, 21, 32, 1, 20, 33, 27, 19, 19, 3, 26, 6,
    19, 15, 5, 10, 16, 26, 27, 3, 16, 25, 28, 31, 12, 19, 5, 33, 13, 30, 8, 24, 4, 5, 12, 6, 5, 5, 1, 28, 16, 2, 17, 3, 10, 11, 24, 1, 20, 2, 18, 12,
    6, 12, 16, 33, 10, 14, 32, 2, 13, 26, 17, 19, 12, 2, 22, 9, 10, 21, 13, 11, 16, 14, 27, 21, 12, 4, 29, 31, 31, 25, 22, 4, 33, 4, 15, 5, 9, 31, 3,
    5, 20, 29, 18, 28, 26, 13, 18, 27, 5, 32, 23, 24, 21, 27, 20, 24, 7, 25, 26, 31, 9, 17, 10, 23, 22, 8, 24, 20, 30, 27, 18, 7, 26, 3, 33, 18, 2,
    33, 30, 24, 19, 22, 5, 33, 3, 24, 9, 16, 28, 15, 5, 20, 6, 15, 2, 3, 11, 21, 6, 17, 11, 30, 25, 22, 9, 4, 22, 20, 15, 16, 4, 25, 1, 23, 10, 14,
    32, 10, 18, 32, 2, 22, 4, 4, 23, 1, 5, 1, 5, 12, 21, 24, 25, 10, 11, 17, 2, 18, 8, 21, 27, 23, 23, 4, 27, 25, 13, 8, 1, 26, 14, 6, 30, 20, 28, 16,
    21, 30, 22, 27, 22, 16, 13, 11, 9, 27, 2, 2, 16, 16, 17, 21, 17, 9, 25, 28, 23, 15, 23, 6, 5, 1, 20, 1, 6, 14, 20, 32, 1, 31, 28, 7, 24, 28, 32,
    14, 25, 5, 7, 2, 29, 6, 27, 10, 11, 21, 13, 17, 28, 12, 3, 22, 14, 5, 25, 2, 20, 9, 25, 2, 28, 18, 10, 29, 28, 33, 6, 16, 28, 14, 29, 12, 2, 4,
    32, 23, 5, 10, 7, 12, 31, 28, 31, 13, 14, 13, 2, 23, 1, 22, 6, 29, 24, 11, 4, 22, 5, 13, 30, 11, 24, 2, 23, 13, 15, 5, 25, 6, 5, 15, 9, 1, 7, 16,
    10, 6, 7, 11, 16, 32, 8, 18, 24, 13, 16, 18, 31, 7, 2, 6, 1, 11, 28, 11, 15, 19, 12, 33, 6, 14, 13, 12, 4, 30, 2, 18, 4, 21, 5, 16, 11, 31, 11,
    14, 18, 22, 9, 20, 18, 12, 32, 32, 1, 12, 20, 14, 26, 14, 6, 15, 19, 31, 28, 12, 6, 2, 5, 27, 16, 29, 31, 4, 9, 10, 6, 28, 26, 7, 9, 19, 1, 7, 8,
    26, 6, 30, 26, 7, 4, 33, 32, 16, 13, 27, 5, 26, 3, 15, 33, 23, 12, 9, 19, 4, 25, 20, 29, 3, 23, 4, 9, 11, 33, 24, 16, 4, 27, 22, 17, 31, 7, 16,
    14, 32, 4, 7, 21, 22, 33, 4, 32, 12, 32, 11, 14, 27, 30, 17, 26, 25, 19, 5, 11, 2, 22, 4, 18, 6, 4, 6, 7, 30, 12, 19, 19, 8, 12, 21, 4, 31, 22,
    22, 31, 15, 9, 25, 12, 27, 32, 21, 6, 32, 10, 19, 17, 2, 15, 19, 9, 19, 21, 1, 7, 21, 2, 2, 32, 27, 22, 13, 20, 18, 12, 17, 9, 5, 9, 24, 10, 21,
    27, 27, 15, 16, 31, 2, 20, 8, 1, 16, 2, 12, 18, 27, 20, 16, 24, 18, 33, 20, 7, 13, 16, 20, 33, 12, 32, 15, 3, 33, 4, 8, 13, 27, 9, 28, 1, 17, 7,
    17, 22, 21, 24, 15, 26, 9, 29, 20, 6, 22, 20, 6, 30, 29, 24, 16, 15, 12, 9, 14, 31, 7, 2, 19, 11, 14, 24, 20, 13, 29, 21, 1, 4, 5, 11, 7, 2, 10,
    11, 23, 5, 21, 1, 30, 27, 12, 5, 9, 23, 15, 6, 13, 8, 6, 7, 13, 4, 6, 22, 7, 14, 19, 25, 28, 19, 29, 21, 18, 2, 14, 14, 7, 9, 24, 25, 12, 26, 8,
    6, 11, 28, 10, 3, 23, 16, 4, 5, 6, 20, 18, 30, 18, 19, 14, 5, 8, 9, 28, 20, 23, 13, 8, 23, 1, 26, 17, 23, 22, 30, 24, 3, 30, 9, 32, 23, 30, 2, 3,
    6, 8, 31, 32, 12, 6, 24, 5, 29, 33, 18, 29, 12, 22, 1, 27, 26, 26, 12, 25, 16, 32, 13, 26, 4, 1, 17, 9, 13, 9, 23, 11, 14, 27, 1, 1, 23, 4, 24,
    25, 30, 20, 21, 18, 4, 30, 22, 30, 4, 26, 26, 27, 30, 9, 32, 23, 4, 2, 11, 17, 16, 5, 25, 10, 24, 24, 24, 11, 24, 16, 21, 28, 22, 14, 29, 29, 18,
    28, 6, 20, 19, 12, 12, 22, 27, 12, 12, 32, 2, 28, 21, 2, 27, 3, 30, 28, 4, 5, 27, 33, 29, 6, 15, 20, 22, 8, 1, 4, 11, 14, 23, 5, 14, 33, 25, 13,
    25, 6, 18, 30, 31, 15, 25, 24, 12, 20, 31, 18, 24, 5, 31, 20, 23, 15, 3, 19, 31, 3, 18, 15, 27, 14, 25, 1, 8, 25, 2, 17, 33, 3, 19, 20, 3, 12, 7,
    15, 6, 26, 1, 26, 30, 2, 26, 22, 6, 7, 29, 13, 19, 21, 13, 10, 21, 24, 7, 11, 19, 16, 21, 23, 1, 16, 10, 31, 16, 29, 22, 17, 26, 13, 19, 15, 1,
    11, 30, 20, 8, 3, 23, 2, 25, 20, 22, 1, 11, 11, 13, 1, 32, 25, 27, 20, 8, 27, 17, 18, 17, 3, 21, 11, 1, 31, 17, 1, 32, 7, 25, 28, 13, 29, 23, 33,
    18, 31, 2, 28, 20, 24, 9, 31, 30, 10, 24, 2, 19, 5, 9, 3, 8, 26, 24, 24, 33, 18, 24, 24, 32, 9, 1, 25, 23, 18, 21, 16, 29, 16, 16, 23, 30, 17, 32,
    19, 33, 25, 13, 10, 26, 20, 16, 18, 4, 28, 16, 17, 2, 21, 31, 7, 13, 33, 9, 31, 6, 6, 13, 14, 8, 29, 16, 10, 28, 10, 5, 27, 33, 21, 26, 33, 5, 7,
    6, 19, 16, 17, 27, 4, 15, 26, 16, 27, 8, 5, 5, 7, 25, 8, 1, 17, 31, 18, 30, 15, 7, 28, 20, 27, 9, 22, 8, 20, 18, 23, 5, 11, 9, 13, 32, 31, 3, 6,
    28, 22, 10, 18, 10, 16, 10, 22, 2, 5, 19, 23, 8, 22, 20, 9, 15, 10, 30, 26, 20, 4, 13, 30, 1, 4, 24, 3, 23, 6, 13, 22, 17, 30, 11, 24, 29, 9, 7,
    28, 24, 26, 25, 18, 24, 31, 12, 18, 17, 28, 4, 15, 11, 14, 29, 26, 19, 2, 31, 28, 18, 28, 15, 25, 13, 32, 3, 16, 9, 11, 21, 20, 17, 27, 2, 14, 2,
    13, 4, 25, 15, 23, 1, 2, 10, 19, 28, 8, 16, 25, 31, 3, 18, 25, 27, 22, 11, 30, 6, 14, 20, 22, 28, 17, 22, 3, 30, 31, 21, 20, 1, 6, 6, 28, 17, 14,
    25, 28, 31, 6, 15, 2, 16, 12, 32, 31, 9, 14, 14, 13, 5, 31, 9, 30, 32, 16, 11, 24, 4, 26, 3, 26, 12, 9, 8, 9, 25, 13, 7, 22, 9, 16, 28, 28, 20, 2,
    29, 2, 27, 6, 31, 30, 14, 12, 18, 15, 1, 27, 32, 30, 6, 8, 7, 31, 15, 19, 2, 14, 9, 9, 25, 8, 8, 19, 22, 12, 2, 21, 7, 30, 1, 20, 19, 3, 32, 16,
    26, 10, 26, 24, 17, 5, 10, 19, 24, 2, 10, 7, 33, 28, 22, 19, 8, 21, 31, 19, 25, 28, 13, 10, 31, 20, 8, 16, 31, 23, 1, 7, 30, 31, 31, 21, 27, 23,
    22, 17, 14, 25, 19, 6, 24, 7, 2, 19, 8, 20, 31, 22, 15, 26, 4, 22, 23, 29, 1, 24, 16, 22, 5, 33, 12, 14, 19, 20, 16, 6, 4, 31, 22, 2, 9, 13, 7,
    23, 4, 33, 19, 26, 14, 19, 25, 24, 29, 13, 10, 21, 21, 8, 16, 11, 27, 14, 12, 4, 13, 31, 27, 2, 4, 28, 1, 24, 2, 3, 15, 32, 24, 23, 11, 27, 13,
    19, 16, 21, 10, 21, 18, 16, 4, 29, 32, 29, 3, 16, 33, 26, 33, 2, 23, 26, 2, 18, 22, 13, 22, 26, 22, 9, 14, 21, 19, 7, 26, 5, 18, 13, 32, 15, 10,
    18, 9, 32, 13, 26, 9, 7, 25, 17, 9, 33, 31, 21, 7, 3, 28, 24, 8, 3, 2, 20, 7, 14, 32, 13, 33, 8, 9, 33, 24, 14, 3, 32, 19, 17, 7, 33, 13, 5, 13,
    17, 10, 24, 7, 21, 32, 9, 3, 10, 22, 33, 32, 10, 9, 14, 14, 11, 22, 16, 33, 10, 2, 12, 12, 8, 5, 7, 16, 24, 30, 24, 30, 22, 24, 4, 11, 19, 23, 8,
    30, 30, 29, 27, 2, 15, 4, 27, 9, 27, 1, 21, 6, 26, 13, 26, 20, 17, 2, 5, 5, 30, 24, 21, 5, 5, 26, 25, 28, 30, 16, 9, 20, 21, 20, 12, 14, 32, 27,
    2, 1, 27, 32, 32, 22, 20, 29, 13, 18, 2, 6, 15, 15, 14, 11, 15, 30, 22, 20, 23, 30, 26, 3, 30, 31, 18, 29, 11, 28, 10, 13, 30, 8, 4, 21, 9, 22,
    16, 29, 20, 24, 33, 17, 8, 3, 25, 12, 5, 5, 8, 26, 4, 29, 31, 17, 28, 16, 28, 9, 5, 25, 24, 22, 9, 23, 12, 22, 31, 31, 23, 6, 5, 22, 4, 4, 20, 9,
    21, 26, 18, 17, 12, 3, 33, 13, 5, 6, 2, 23, 16, 11, 20, 14, 12, 2, 12, 4, 28, 18, 13, 31, 30, 26, 33, 18, 7, 1, 3, 17, 19, 33, 25, 11, 4, 17, 23,
    23, 3, 23, 14, 2, 27, 8, 26, 16, 23, 6, 31, 13, 5, 6, 33, 4, 33, 30, 16, 7, 31, 24, 18, 24, 9, 1, 7, 23, 24, 12, 24, 31, 4, 5, 16, 7, 32, 21, 1,
    32, 3, 10, 24, 26, 15, 15, 7, 2, 23, 14, 29, 5, 26, 17, 9, 12, 8, 11, 11, 18, 7, 18, 29, 29, 3, 3, 33, 9, 18, 11, 2, 16, 8, 23, 32, 5, 17, 25, 7,
    30, 3, 6, 12, 32, 8, 33, 20, 8, 8, 33, 7, 20, 5, 22, 7, 33, 1, 29, 31, 27, 19, 12, 9, 20, 31, 27, 30, 20, 21, 14, 9, 29, 8, 14, 16, 20, 30, 13,
    30, 17, 18, 18, 26, 11, 19, 4, 2, 25, 8, 20, 10, 13, 14, 18, 32, 33, 2, 26, 21, 13, 4, 28, 17, 25, 6, 30, 24, 14, 23, 24, 20, 9, 29, 24, 3, 25,
    24, 1, 24, 3, 12, 10, 3, 27, 20, 20, 1, 30, 13, 7, 10, 2, 2, 6, 3, 23, 5, 17, 8, 12, 23, 12, 1, 19, 11, 6, 6, 23, 16, 28, 19, 14, 25, 19, 32, 3,
    16, 28, 9, 16, 7, 25, 32, 24, 31, 26, 23, 20, 17, 33, 19, 13, 24, 21, 13, 30, 12, 16, 5, 15, 18, 32, 10, 9, 16, 30, 9, 9, 11, 21, 5, 12, 12, 20,
    23, 31, 19, 22, 18, 27, 8, 10, 3, 21, 7, 16, 7, 27, 2, 2, 24, 27, 15, 7, 31, 15, 19, 21, 14, 2, 8, 21, 14, 10, 17, 7, 20, 11, 28, 12, 26, 28, 28,
    16, 26, 4, 23, 17, 11, 5, 20, 30, 13, 30, 28, 1, 3, 12, 20, 15, 28, 11, 22, 2, 6, 20, 11, 32, 8, 24, 11, 2, 11, 3, 30, 5, 4, 23, 29, 30, 8, 4, 16,
    19, 5, 8, 11, 14, 2, 11, 17, 20, 22, 19, 30, 15, 30, 7, 12, 1, 32, 18, 7, 21, 6, 26, 17, 30, 4, 4, 22, 4, 18, 20, 2, 32, 30, 21, 21, 13, 3, 21,
    29, 7, 27, 13, 10, 10, 24, 28, 4, 21, 30, 17, 13, 30, 22, 24, 18, 18, 3, 9, 29, 1, 2, 14, 29, 19, 25, 24, 20, 4, 20, 14, 11, 2, 15, 25, 13, 4, 15,
    5, 17, 26, 2, 23, 3, 4, 10, 12, 27, 17, 5, 22, 19, 7, 3, 29, 21, 16, 25, 28, 10, 8, 3, 7, 19, 8, 29, 5, 32, 3, 9, 15, 10, 33, 10, 6, 26, 20, 12,
    11, 25, 16, 17, 28, 25, 2, 29, 28, 16, 10, 5, 9, 3, 7, 27, 29, 33, 6, 13, 29, 31, 27, 22, 17, 9, 29, 2, 24, 1, 15, 2, 11, 22, 33, 21, 6, 31, 33,
    9, 29, 32, 32, 6, 12, 8, 33, 20, 4, 23, 29, 33, 4, 15, 32, 15, 9, 13, 31, 19, 13, 22, 13, 26, 6, 29, 3, 5, 24, 33, 28, 13, 31, 21, 16, 3, 19, 28,
    25, 30, 30, 4, 27, 6, 30, 4, 14, 29, 30, 12, 27, 9, 30, 30, 32, 6, 14, 31, 2, 26, 8, 6, 14, 7, 6, 17, 16, 23, 1, 29, 32, 7, 24, 8, 15, 15, 32, 14,
    1, 16, 16, 28, 6, 20, 2, 9, 12, 21, 14, 20, 26, 11, 24, 24, 10, 32, 10, 25, 3, 5, 7, 18, 16, 6, 19, 25, 22, 11, 8, 26, 24, 23, 4, 6, 30, 27, 11,
    27, 22, 18, 15, 10, 19, 29, 13, 32, 12, 28, 33, 19, 5, 8, 5, 6, 4, 17, 31, 15, 19, 22, 31, 31, 33, 23, 27, 24, 5, 12, 26, 1, 29, 18, 15, 33, 15,
    5, 18, 33, 31, 15, 5, 15, 1, 33, 15, 18, 28, 22, 7, 18, 3, 8, 33, 11, 30, 32, 11, 6, 5, 21, 28, 24, 29, 21, 24, 21, 13, 1, 1, 11, 21, 14, 3, 28,
    33, 9, 26, 11, 2, 6, 23, 21, 2, 11, 9, 13, 13, 28, 21, 14, 29, 33, 4, 15, 12, 31, 2, 19, 24, 27, 15, 5, 17, 4, 3, 7, 16, 18, 21, 14, 3, 28, 4, 27,
    19, 29, 26, 17, 19, 5, 2, 7, 33, 33, 8, 24, 14, 21, 26, 10, 11, 12, 12, 25, 23, 1, 12, 26, 13, 32, 17, 28, 9, 26, 15, 26, 15, 10, 22, 33, 6, 4, 9,
    21, 21, 2, 4, 13, 11, 29, 10, 12, 32, 21, 25, 8, 25, 2, 33, 11, 13, 20, 21, 18, 30, 29, 3, 7, 29, 27, 27, 22, 7, 26, 18, 27, 2, 13, 33, 5, 18, 2,
    9, 13, 19, 30, 20, 9, 18, 23, 30, 10, 27, 12, 2, 24, 25, 8, 3, 24, 12, 30, 14, 24, 10, 28, 23, 2, 9, 1, 33, 31, 7, 32, 29, 32, 1, 29, 15, 17, 13,
    30, 21, 24, 23, 33, 15, 33, 3, 20, 8, 33, 25, 18, 7, 6, 31, 21, 15, 29, 16, 21, 14, 3, 29, 14, 19, 23, 1, 18, 11, 28, 29, 13, 28, 1, 26, 27, 2, 6,
    29, 18, 26, 13, 1, 17, 2, 9, 21, 5, 9, 9, 17, 20, 29, 6, 25, 3, 33, 16, 12, 1, 13, 3, 30, 4, 16, 32, 9, 25, 21, 8, 18, 6, 10, 22, 31, 13, 19, 7,
    17, 13, 8, 22, 15, 2, 22, 8, 2, 2, 5, 16, 29, 9, 30, 22, 22, 26, 31, 17, 29, 31, 20, 12, 25, 22, 28, 14, 20, 18, 20, 27, 31, 9, 31, 23, 32, 2, 26,
    9, 15, 31, 16, 30, 1, 26, 2, 19, 33, 16, 21, 20, 7, 32, 20, 3, 22, 22, 26, 21, 20, 7, 6, 28, 19, 4, 31, 14, 25, 32, 23, 32, 3, 24, 9, 18, 6, 1,
    27, 16, 4, 6, 32, 6, 24, 28, 12, 15, 19, 14, 17, 20, 21, 18, 32, 12, 24, 10, 26, 33, 27, 14, 29, 15, 13, 27, 11, 4, 33, 20, 2, 28, 22, 33, 24, 5,
    13, 32, 32, 33, 3, 3, 33, 21, 19, 23, 20, 32, 8, 23, 33, 18, 2, 15, 27, 6, 12, 24, 15, 7, 4, 16, 13, 2, 1, 30, 23, 29, 20, 16, 18, 20, 3, 4, 23,
    13, 27, 18, 1, 2, 7, 11, 18, 16, 25, 20, 1, 8, 21, 21, 13, 16, 5, 11, 30, 12, 7, 2, 5, 8, 27, 13, 32, 16, 31, 33, 30, 6, 29, 19, 11, 27, 11, 9,
    31, 20, 13, 12, 32, 8, 16, 31, 16, 6, 25, 21, 10, 31, 5, 15, 15, 8, 19, 13, 30, 6, 33, 2, 10, 10, 27, 22, 6, 2, 29, 27, 24, 21, 24, 27, 7, 31, 2,
    9, 10, 13, 30, 27, 1, 29, 18, 25, 15, 11, 31, 14, 1, 32, 24, 33, 18, 6, 13, 24, 6, 27, 10, 23, 9, 10, 14, 15, 30, 31, 11, 1, 15, 21, 29, 1, 4, 3,
    17, 22, 18, 9, 33, 15, 18, 6, 16, 21, 17, 20, 26, 8, 12, 29, 8, 11, 8, 24, 19, 20, 17, 12, 18, 25, 23, 15, 12, 6, 29, 18, 32, 5, 27, 29, 20, 26,
    30, 16, 1, 21, 28, 13, 18, 11, 24, 32, 23, 33, 10, 8, 11, 10, 15, 15, 16, 33, 30, 19, 7, 11, 23, 24, 6, 19, 14, 31, 12, 4, 13, 9, 1, 25, 24, 8,
    17, 23, 22, 18, 17, 12, 9, 25, 6, 17, 4, 19, 14, 20, 19, 31, 29, 8, 22, 27, 17, 1, 18, 12, 31, 30, 16, 9, 20, 19, 24, 1, 16, 13, 17, 29, 24, 23,
    22, 10, 13, 21, 28, 10, 17, 30, 6, 23, 18, 22, 30, 2, 19, 17, 15, 22, 13, 26, 25, 9, 29, 13, 31, 30, 26, 4, 25, 2, 23, 12, 5, 7, 13, 4, 26, 6, 9,
    6, 15, 30, 30, 22, 6, 1, 10, 20, 4, 4, 4, 17, 30, 16, 6, 15, 4, 9, 1, 21, 15, 32, 21, 24, 28, 12, 24, 25, 7, 3, 19, 3, 4, 14, 27, 31, 28, 12, 32,
    17, 22, 6, 22, 5, 29, 9, 25, 33, 9, 12, 2, 29, 26, 7, 21, 26, 9, 26, 29, 13, 11, 23, 21, 8, 21, 15, 19, 21, 12, 6, 19, 4, 10, 7, 3, 10, 22, 6, 25,
    8, 32, 27, 1, 32, 22, 4, 9, 28, 4, 13, 29, 33, 6, 13, 24, 14, 16, 13, 31, 5, 21, 22, 2, 33, 13, 20, 12, 28, 7, 5, 19, 5, 32, 30, 20, 17, 12, 20,
    17, 17, 23, 24, 16, 20, 8, 15, 33, 30, 19, 1, 24, 5, 22, 16, 14, 6, 6, 7, 21, 18, 25, 33, 25, 25, 5, 28, 6, 25, 6, 23, 9, 5, 32, 32, 5, 25, 17,
    16, 29, 10, 20, 13, 23, 25, 22, 14, 19, 3, 32, 29, 19, 12, 20, 17, 9, 17, 22, 15, 26, 29, 13, 29, 15, 31, 22, 18, 18, 2, 13, 16, 7, 15, 33, 32,
    18, 7, 24, 25, 33, 16, 21, 2, 27, 27, 29, 31, 30, 27, 6, 30, 18, 12, 15, 31, 33, 25, 5, 2, 17, 1, 29, 24, 30, 10, 13, 16, 24, 6, 18, 3, 32, 9, 27,
    23, 26, 33, 25, 8, 24, 25, 31, 14, 30, 10, 13, 12, 22, 9, 10, 20, 27, 3, 30, 24, 17, 11, 22, 2, 1, 12, 24, 29, 11, 30, 30, 10, 3, 28, 31, 32, 28,
    12, 14, 21, 6, 27, 4, 21, 7, 29, 31, 20, 24, 14, 17, 8, 1, 20, 1, 10, 5, 32, 6, 10, 29, 15, 7, 27, 10, 28, 6, 8, 2, 8, 6, 13, 20, 13, 23, 16, 16,
    16, 22, 7, 24, 25, 25, 33, 19, 17, 20, 14, 27, 24, 26, 12, 8, 17, 3, 22, 2, 12, 7, 15, 14, 27, 6, 6, 14, 21, 32, 12, 28, 19, 28, 16, 4, 16, 4, 14,
    3, 3, 9, 7, 23, 27, 17, 12, 19, 33, 7, 21, 33, 24, 24, 19, 12, 5, 3, 15, 5, 8, 30, 6, 18, 31, 18, 31, 8, 1, 10, 22, 31, 22, 16, 25, 10, 28, 14, 1,
    4, 2, 16, 24, 20, 18, 9, 30, 18, 14, 21, 14, 25, 23, 7, 25, 25, 8, 6, 22, 21, 14, 8, 3, 20, 2, 29, 9, 6, 33, 20, 6, 7, 31, 21, 31, 30, 26, 14, 23,
    32, 8, 20, 17, 18, 20, 31, 20, 26, 12, 4, 23, 15, 3, 23, 30, 13, 24, 30, 10, 20, 26, 21, 31, 14, 3, 11, 6, 8, 7, 9, 32, 4, 14, 33, 12, 22, 28, 2,
    16, 6, 26, 8, 20, 13, 21, 9, 5, 3, 8, 14, 7, 23, 20, 24, 11, 19, 9, 5, 6, 1, 10, 25, 12, 10, 23, 23, 9, 18, 11, 19, 17, 30, 27, 1, 29, 14, 29, 33,
    8, 7, 2, 30, 22, 16, 28, 18, 3, 30, 18, 1, 6, 7, 27, 28, 13, 30, 5, 2, 31, 15, 24, 31, 32, 10, 28, 32, 21, 2, 6, 4, 33, 28, 26, 15, 7, 29, 10, 12,
    3, 7, 4, 10, 29, 30, 5, 13, 16, 9, 17, 5, 9, 18, 25, 28, 4, 3, 11, 22, 28, 9, 28, 4, 29, 20, 11, 7, 7, 1, 31, 14, 10, 2, 24, 3, 33, 24, 3, 22, 25,
    23, 6, 27, 4, 17, 21, 9, 18, 11, 25, 31, 16, 3, 7, 2, 6, 31, 20, 24, 6, 5, 9, 28, 26, 18, 17, 12, 2, 32, 31, 22, 30, 19, 14, 12, 25, 33, 11, 33,
    14, 29, 8, 12, 25, 26, 32, 24, 32, 5, 6, 29, 3, 22, 27, 28, 14, 22, 16, 7, 29, 17, 16, 31, 5, 25, 11, 5, 2, 13, 19, 15, 18, 12, 3, 24, 25, 22, 17,
    9, 17, 13, 30, 20, 7, 16, 26, 20, 32, 3, 15, 11, 16, 20, 20, 15, 7, 33, 3, 14, 15, 21, 12, 1, 9, 3, 33, 9, 27, 18, 12, 25, 33, 25, 33, 19, 18, 17,
    3, 18, 19, 29, 4, 15, 7, 28, 29, 26, 31, 2, 21, 29, 14, 8, 10, 30, 18, 26, 7, 30, 16, 20, 9, 25, 25, 31, 20, 22, 12, 9, 8, 12, 12, 19, 19, 4, 29,
    4, 1, 21, 11, 16, 12, 2, 18, 32, 26, 32, 1, 10, 27, 18, 32, 7, 27, 22, 27, 27, 31, 18, 29, 25, 28, 14, 15, 22, 1, 12, 17, 32, 15, 5, 15, 21, 5, 9,
    19, 30, 24, 14, 11, 12, 14, 30, 23, 17, 10, 17, 8, 1, 24, 9, 20, 14, 21, 21, 4, 11, 12, 32, 13, 22, 8, 29, 33, 9, 26, 13, 23, 27, 10, 21, 16, 5,
    4, 16, 26, 7, 33, 29, 20, 17, 31, 12, 31, 32, 7, 12, 22, 5, 1, 5, 9, 8, 15, 9, 10, 11, 11, 2, 1, 32, 30, 7, 12, 22, 25, 28, 21, 3, 19, 5, 3, 6,
    10, 17, 6, 4, 20, 16, 23, 26, 9, 13, 9, 21, 18, 8, 6, 29, 4, 3, 1, 20, 4, 1, 13, 11, 20, 13, 32, 26, 9, 16, 17, 28, 1, 29, 25, 12, 6, 32, 32, 25,
    13, 5, 22, 21, 20, 31, 9, 27, 24, 24, 16, 33, 10, 31, 24, 31, 7, 27, 22, 22, 19, 12, 5, 30, 17, 10, 17, 25, 26, 33, 22, 24, 30, 11, 32, 18, 22, 2,
    22, 11, 25, 30, 25, 33, 9, 15, 33, 27, 17, 19, 29, 17, 15, 20, 14, 22, 22, 2, 11, 6, 33, 2, 22, 29, 10, 9, 12, 23, 8, 6, 18, 18, 23, 17, 22, 11,
    29, 7, 29, 7, 9, 18, 28, 8, 7, 27, 33, 6, 27, 15, 3, 11, 12, 19, 15, 8, 7, 28, 17, 15, 15, 17, 26, 26, 26, 16, 25, 25, 15, 32, 32, 27, 5, 33, 4,
    22, 15, 31, 4, 15, 19, 20, 16, 13, 26, 2, 16, 2, 13, 19, 18, 6, 11, 12, 29, 27, 18, 23, 28, 17, 22, 20, 20, 18, 29, 27, 7, 21, 8, 31, 27, 12, 22,
    22, 7, 3, 6, 31, 24, 22, 27, 25, 19, 13, 27, 12, 6, 26, 22, 1, 6, 1, 22, 7, 30, 27, 20, 3, 11, 9, 10, 1, 6, 21, 15, 30, 10, 24, 32, 11, 9, 21, 15,
    27, 20, 26, 29, 17, 10, 6, 28, 21, 11, 17, 32, 9, 12, 4, 4, 27, 31, 20, 22, 24, 5, 32, 10, 3, 27, 27, 12, 8, 4, 15, 14, 29, 4, 28, 22, 20, 22, 12,
    25, 1, 2, 20, 13, 30, 28, 28, 17, 4, 15, 33, 9, 22, 25, 1, 25, 12, 26, 28, 28, 16, 7, 22, 14, 32, 28, 12, 14, 25, 12, 33, 25, 24, 20, 14, 5, 8,
    22, 21, 7, 11, 20, 17, 15, 19, 32, 5, 4, 2, 3, 1, 11, 18, 16, 3, 17, 3, 24, 22, 33, 8, 7, 9, 21, 29, 6, 25, 11, 31, 1, 28, 23, 28, 13, 32, 22, 17,
    13, 4, 19, 1, 22, 3, 3, 8, 27, 18, 24, 11, 28, 7, 25, 32, 30, 9, 33, 30, 7, 12, 24, 5, 5, 19, 13, 2, 18, 25, 6, 9, 29, 30, 17, 13, 19, 15, 30, 3,
    32, 13, 25, 23, 14, 8, 2, 14, 14, 16, 9, 2, 15, 22, 20, 18, 16, 10, 3, 31, 18, 5, 10, 29, 21, 10, 15, 24, 3, 29, 28, 25, 6, 16, 7, 24, 33, 27, 23,
    32, 3, 25, 4, 10, 3, 26, 16, 8, 29, 31, 13, 3, 33, 10, 4, 19, 24, 8, 4, 27, 19, 6, 27, 12, 3, 21, 18, 30, 19, 27, 12, 2, 12, 30, 1, 1, 5, 27, 22,
    23, 33, 4, 28, 22, 7, 17, 8, 3, 28, 33, 2, 14, 23, 32, 21, 27, 18, 10, 30, 11, 18, 18, 12, 30, 14, 25, 10, 19, 2, 19, 22, 20, 16, 1, 15, 10, 29,
    22, 12, 12, 29, 5, 25, 5, 7, 17, 21, 19, 33, 20, 16, 20, 17, 8, 6, 8, 19, 20, 5, 9, 5, 4, 19, 15, 28, 19, 19, 9, 27, 30, 30, 32, 24, 8, 21, 28,
    13, 3, 20, 25, 16, 17, 33, 11, 31, 25, 14, 8, 27, 8, 29, 22, 30, 11, 12, 32, 5, 23, 2, 14, 1, 5, 33, 27, 26, 10, 14, 31, 19, 3, 12, 27, 6, 15, 22,
    7, 13, 19, 17, 10, 2, 8, 6, 32, 21, 20, 17, 24, 30, 11, 7, 27, 31, 14, 33, 20, 5, 5, 32, 1, 22, 20, 20, 29, 15, 20, 33, 16, 1, 8, 1, 3, 23, 14, 6,
    8, 7, 31, 27, 22, 30, 21, 24, 6, 9, 30, 4, 26, 31, 23, 7, 3, 4, 22, 9, 26, 22, 9, 30, 12, 30, 14, 15, 33, 3, 29, 3, 31, 8, 13, 18, 17, 20, 8, 1,
    12, 10, 30, 7, 8, 30, 19, 21, 33, 9, 17, 32, 6, 10, 4, 27, 6, 29, 19, 17, 26, 7, 21, 4, 30, 22, 28, 30, 10, 19, 31, 29, 9, 28, 18, 23, 13, 30, 2,
    1, 21, 13, 19, 33, 21, 9, 6, 11, 12, 8, 32, 23, 8, 23, 11, 29, 23, 29, 20, 25, 12, 10, 33, 33, 11, 13, 10, 11, 7, 30, 28, 6, 5, 14, 22, 28, 28, 1,
    13, 9, 6, 15, 16, 10, 16, 17, 19, 2, 7, 33, 18, 23, 13, 21, 31, 28, 31, 27, 20, 7, 12, 3, 24, 32, 15, 27, 15, 14, 22, 21, 19, 8, 8, 18, 18, 3, 12,
    24, 16, 5, 1, 11, 11, 20, 21, 15, 22, 25, 2, 18, 32, 22, 28, 23, 6, 6, 24, 25, 6, 23, 17, 12, 9, 21, 2, 15, 31, 22, 4, 4, 9, 28, 2, 14, 9, 5, 20,
    6, 13, 11, 24, 25, 33, 23, 3, 21, 21, 23, 3, 13, 28, 23, 26, 16, 8, 9, 14, 30, 18, 13, 20, 22, 1, 26, 18, 29, 20, 25, 14, 22, 33, 8, 2, 15, 15, 9,
    28, 33, 9, 8, 5, 11, 26, 11, 2, 31, 1, 18, 15, 15, 4, 33, 5, 31, 16, 3, 23, 19, 17, 23, 12, 11, 22, 13, 27, 27, 15, 15, 30, 8, 5, 11, 24, 4, 7,
    21, 16, 33, 19, 9, 5, 16, 25, 11, 15, 26, 29, 16, 5, 1, 18, 1, 9, 2, 15, 16, 17, 28, 26, 1, 3, 14, 2, 20, 20, 7, 7, 2, 7, 16, 33, 27, 16, 30, 15,
    1, 24, 20, 23, 25, 26, 30, 4, 3, 1, 29, 22, 5, 19, 2, 28, 25, 16, 5, 13, 5, 23, 29, 10, 33, 9, 27, 25, 22, 33, 28, 15, 11, 14, 14, 29, 19, 8, 1,
    32, 4, 18, 13, 24, 2, 15, 29, 27, 8, 2, 20, 25, 30, 24, 14, 18, 2, 18, 25, 33, 4, 5, 26, 8, 2, 19, 23, 29, 3, 6, 20, 21, 11, 5, 18, 26, 30, 7, 30,
    1, 3, 19, 1, 8, 14, 16, 25, 5, 20, 25, 26, 15, 25, 27, 5, 4, 16, 26, 17, 20, 7, 21, 30, 5, 27, 25, 20, 12, 26, 14, 22, 7, 19, 16, 3, 32, 11, 13,
    19, 2, 4, 5, 14, 24, 1, 19, 12, 6, 2, 24, 26, 25, 8, 31, 15, 16, 19, 3, 21, 18, 29, 7, 9, 8, 19, 14, 23, 19, 15, 29, 33, 24, 16, 7, 18, 10, 8, 33,
    7, 21, 31, 3, 17, 16, 22, 31, 12, 11, 28, 8, 30, 8, 5, 23, 19, 23, 10, 27, 20, 32, 3, 13, 15, 11, 22, 26, 27, 5, 7, 24, 19, 22, 2, 22, 10, 17, 30,
    29, 4, 30, 18, 1, 13, 33, 13, 23, 1, 18, 22, 7, 11, 30, 18, 21, 29, 20, 21, 30, 2, 26, 27, 9, 20, 28, 30, 4, 31, 6, 19, 19, 8, 19, 15, 28, 1, 27,
    10, 23, 10, 14, 20, 6, 5, 15, 23, 11, 31, 22, 26, 3, 4, 32, 24, 18, 13, 25, 8, 8, 22, 21, 10, 25, 19, 2, 32, 26, 31, 19, 22, 15, 28, 10, 6, 23,
    24, 18, 29, 26, 32, 16, 21, 17, 2, 23, 11, 33, 16, 26, 15, 12, 5, 3, 28, 29, 30, 13, 31, 14, 2, 1, 8, 6, 20, 14, 32, 14, 16, 17, 18, 31, 18, 26,
    6, 13, 1, 10, 14, 8, 30, 33, 5, 12, 22, 16, 18, 7, 3, 20, 12, 5, 30, 26, 24, 20, 28, 5, 26, 30, 28, 9, 33, 2, 19, 33, 24, 25, 4, 20, 23, 12, 30,
    12, 18, 32, 10, 7, 30, 23, 24, 9, 11, 2, 19, 9, 9, 27, 29, 32, 30, 28, 19, 30, 10, 7, 11, 29, 10, 9, 12, 14, 24, 1, 12, 9, 4, 11, 29, 2, 10, 22,
    26, 23, 23, 20, 16, 30, 3, 17, 16, 27, 16, 18, 13, 16, 31, 5, 20, 28, 20, 6, 32, 28, 11, 31, 12, 24, 5, 4, 4, 10, 29, 21, 18, 11, 17, 9, 23, 18,
    16, 27, 25, 26, 21, 23, 24, 30, 6, 29, 13, 3, 25, 11, 27, 17, 30, 21, 22, 14, 4, 9, 13, 2, 8, 7, 2, 7, 19, 29, 28, 15, 13, 29, 26, 30, 30, 30, 20,
    5, 3, 6, 31, 17, 32, 7, 28, 6, 8, 3, 13, 26, 26, 20, 6, 24, 24, 32, 17, 9, 14, 21, 26, 7, 18, 26, 6, 14, 22, 2, 13, 31, 13, 14, 25, 8, 8, 31, 21,
    8, 26, 22, 22, 19, 23, 32, 12, 26, 1, 22, 17, 1, 16, 33, 28, 27, 28, 2, 25, 27, 22, 27, 29, 15, 33, 3, 9, 11, 1, 20, 23, 14, 15, 16, 7, 26, 12,
    23, 15, 13, 2, 19, 16, 8, 33, 21, 8, 5, 30, 14, 2, 11, 24, 4, 23, 22, 2, 15, 2, 18, 6, 32, 13, 20, 11, 25, 30, 18, 17, 16, 28, 28, 19, 30, 1, 16,
    17, 9, 29, 13, 15, 18, 10, 5, 12, 23, 32, 9, 22, 25, 3, 15, 8, 14, 8, 12, 26, 25, 16, 31, 1, 26, 19, 2, 33, 24, 18, 16, 21, 23, 15, 32, 18, 17,
    21, 22, 29, 3, 8, 14, 15, 14, 15, 5, 24, 11, 11, 28, 31, 11, 21, 16, 15, 3, 13, 5, 5, 3, 33, 31, 7, 20, 30, 8, 2, 18, 5, 8, 4, 32, 22, 28, 7, 11,
    25, 18, 27, 9, 5, 2, 29, 29, 18, 9, 12, 6, 29, 6, 11, 17, 21, 14, 9, 21, 10, 27, 19, 13, 16, 17, 3, 25, 25, 17, 12, 30, 15, 11, 14, 23, 2, 11, 14,
    12, 15, 5, 22, 28, 31, 18, 6, 13, 9, 8, 13, 13, 26, 16, 2, 24, 25, 29, 20, 17, 17, 20, 30, 8, 4, 8, 9, 4, 17, 18, 7, 23, 25, 4, 5, 4, 17, 21, 13,
    1, 9, 17, 8, 19, 24, 26, 12, 33, 33, 25, 2, 2, 8, 32, 17, 16, 26, 19, 25, 18, 7, 14, 13, 31, 5, 26, 22, 24, 1, 20, 19, 11, 26, 20, 30, 18, 18, 17,
    30, 10, 12, 22, 7, 16, 16, 33, 9, 7, 2, 27, 19, 27, 4, 30, 17, 26, 2, 5, 5, 19, 5, 7, 13, 32, 30, 11, 26, 14, 28, 25, 10, 14, 23, 5, 33, 14, 21,
    29, 11, 6, 12, 31, 13, 2, 9, 23, 18, 16, 23, 30, 20, 25, 12, 5, 1, 20, 28, 33, 24, 11, 25, 21, 18, 21, 24, 20, 15, 29, 19, 20, 8, 33, 5, 8, 20,
    24, 27, 11, 1, 19, 14, 16, 12, 29, 4, 20, 6, 29, 32, 24, 23, 1, 20, 25, 24, 18, 23, 33, 25, 18, 23, 23, 15, 13, 21, 33, 17, 14, 30, 28, 28, 6, 1,
    33, 11, 24, 6, 13, 2, 33, 3, 1, 8, 4, 22, 23, 9, 6, 6, 1, 29, 23, 17, 17, 22, 11, 14, 17, 17, 7, 16, 7, 5, 27, 31, 3, 8, 23, 20, 19, 32, 14, 32,
    12, 20, 22, 30, 14, 31, 18, 27, 24, 5, 20, 24, 8, 14, 11, 7, 6, 2, 16, 15, 24, 1, 18, 15, 9, 2, 10, 17, 8, 11, 26, 29, 10, 3, 24, 10, 15, 9, 6,
    25, 15, 8, 12, 26, 21, 20, 24, 11, 20, 7, 5, 22, 28, 25, 25, 5, 12, 17, 19, 6, 32, 4, 13, 25, 6, 10, 22, 8, 19, 11, 10, 14, 11, 6, 32, 25, 21, 5,
    19, 9, 15, 1, 17, 32, 2, 27, 30, 14, 30, 19, 21, 9, 33, 15, 21, 10, 27, 19, 27, 5, 8, 23, 1, 11, 21, 28, 20, 14, 23, 17, 9, 3, 24, 16, 31, 25, 9,
    19, 18, 5, 23, 16, 33, 24, 20, 12, 19, 20, 10, 22, 11, 10, 14, 12, 32, 2, 27, 1, 5, 28, 28, 1, 1, 16, 27, 15, 8, 17, 33, 12, 13, 13, 13, 14, 16,
    18, 18, 28, 22, 20, 6, 28, 15, 18, 21, 23, 15, 25, 12, 33, 26, 29, 9, 27, 24, 21, 9, 26, 27, 30, 11, 12, 29, 12, 5, 19, 29, 7, 17, 3, 4, 26, 5,
    15, 15, 10, 20, 7, 14, 28, 9, 3, 17, 3, 3, 20, 20, 27, 29, 23, 25, 32, 5, 25, 31, 20, 27, 10, 17, 31, 33, 2, 4, 4, 23, 1, 24, 28, 30, 3, 8, 33, 5,
    3, 3, 1, 5, 21, 3, 7, 14, 3, 17, 14, 17, 15, 24, 31, 11, 18, 2, 8, 10, 3, 22, 1, 27, 5, 5, 21, 20, 24, 1, 30, 19, 33, 5, 19, 1, 10, 31, 32, 29, 3,
    7, 28, 10, 16, 9, 10, 9, 8, 16, 22, 20, 23, 32, 19, 5, 32, 15, 10, 8, 28, 25, 23, 13, 4, 15, 21, 7, 19, 3, 24, 2, 19, 6, 7, 9, 17, 9, 13, 14, 7,
    16, 6, 17, 7, 7, 29, 3, 15, 22, 26, 1, 23, 8, 27, 5, 23, 2, 6, 3, 13, 25, 26, 22, 22, 5, 22, 12, 10, 27, 16, 32, 10, 33, 29, 28, 25, 17, 17, 24,
    25, 26, 18, 9, 15, 17, 23, 2, 18, 13, 4, 9, 33, 16, 9, 23, 8, 10, 30, 27, 22, 7, 4, 25, 16, 33, 24, 2, 8, 26, 1, 2, 4, 21, 28, 1, 19, 27, 15, 13,
    3, 14, 16, 26, 26, 23, 24, 2, 2, 24, 33, 26, 1, 19, 8, 7, 26, 29, 31, 33, 13, 22, 2, 6, 9, 15, 24, 21, 17, 30, 16, 19, 5, 8, 11, 31, 22, 21, 16,
    5, 28, 13, 13, 32, 12, 14, 3, 13, 26, 22, 12, 9, 1, 21, 14, 8, 7, 32, 6, 20, 31, 29, 2, 19, 30, 26, 17, 20, 28, 1, 20, 10, 12, 25, 20, 27, 15, 25,
    15, 32, 8, 12, 10, 17, 19, 33, 22, 15, 23, 31, 32, 14, 7, 24, 33, 8, 31, 20, 23, 28, 29, 32, 30, 19, 20, 21, 27, 29, 13, 30, 3, 17, 7, 1, 14, 24,
    31, 31, 30, 26, 3, 20, 23, 33, 18, 11, 3, 3, 27, 15, 26, 16, 7, 8, 25, 18, 29, 14, 15, 23, 9, 15, 11, 32, 5, 32, 23, 17, 17, 24, 27, 2, 20, 28, 4,
    24, 6, 4, 2, 6, 18, 29, 19, 19, 9, 24, 7, 32, 5, 4, 9, 27, 10, 16, 31, 19, 10, 8, 18, 6, 19, 28, 27, 7, 14, 11, 27, 6, 3, 10, 32, 22, 19, 19, 31,
    10, 12, 3, 29, 5, 25, 24, 21, 32, 32, 16, 14, 22, 4, 30, 10, 6, 15, 11, 30, 8, 28, 22, 18, 31, 16, 11, 27, 33, 14, 10, 14, 15, 32, 31, 11, 1, 12,
    3, 27, 20, 9, 17, 23, 28, 8, 31, 8, 5, 16, 13, 15, 27, 6, 2, 15, 5, 22, 8, 32, 23, 32, 2, 7, 2, 12, 16, 21, 16, 1, 15, 33, 19, 6, 10, 16, 27, 9,
    3, 10, 16, 29, 1, 5, 15, 25, 22, 22, 17, 13, 20, 15, 6, 8, 17, 7, 2, 10, 8, 31, 7, 19, 13, 1, 15, 23, 1, 12, 13, 20, 24, 31, 28, 26, 24, 15, 26,
    15, 10, 16, 9, 2, 19, 32, 7, 20, 22, 15, 30, 17, 9, 3, 8, 28, 15, 27, 30, 7, 8, 1, 8, 15, 9, 20, 14, 8, 25, 8, 19, 30, 23, 3, 3, 23, 20, 13, 24,
    23, 32, 23, 10, 30, 9, 31, 17, 24, 12, 6, 4, 24, 6, 15, 13, 8, 31, 8, 24, 28, 33, 26, 14, 26, 8, 12, 6, 8, 8, 23, 4, 31, 17, 20, 2, 1, 21, 21, 3,
    4, 29, 22, 9, 31, 19, 15, 27, 29, 24, 7, 10, 1, 5, 31, 14, 29, 3, 25, 17, 32, 22, 29, 9, 2, 15, 7, 30, 21, 1, 4, 33, 12, 2, 21, 18, 24, 21, 30,
    31, 32, 26, 33, 26, 14, 16, 11, 26, 27, 14, 3, 16, 21, 17, 23, 23, 33, 11, 8, 9, 1, 14, 23, 11, 23, 7, 29, 26, 14, 33, 22, 26, 26, 19, 19, 15, 16,
    25, 23, 21, 26, 4, 20, 11, 13, 12, 13, 21, 3, 20, 28, 24, 10, 14, 1, 14, 26, 27, 31, 24, 22, 25, 14, 33, 6, 12, 20,
];
console.log(numSubarrayProductLessThanK(nums, 1409));
